\name{addNumeric.AdditionTCPartial}
\alias{addNumeric.AdditionTCPartial}
\title{add numeric}
\description{
Use method \code{addNumeric} to add numeric.
}
\usage{
\method{addNumeric}{AdditionTCPartial}(x_n, y_n)
}
\arguments{
\item{x_n}{An unconstrained vector of numeric values.}
\item{y_n}{An unconstrained vector of numeric values.}
}
\value{
No function return type instrumentation.
}
\references{
See \code{wyz.code.offensiveProgramming} package documentation.

You may read \href{https://neonira.github.io/offensiveProgrammingBook/}{Offensive Programming Book} to get introduction and expert advices on offensive programming.

Refer to \href{https://cran.r-project.org/doc/manuals/R-exts.html}{Writing R extensions} to know more about R documentation requirements.
}
\author{
\packageAuthor{zorg}

Maintainer: \packageMaintainer{zorg}
}
\seealso{
See \code{\link[wyz.code.offensiveProgramming:runTransientFunction]{wyz.code.offensiveProgramming:runTransientFunction}} to call interactively an offensive programming function, whether instrumented or not.

See \code{\link[wyz.code.offensiveProgramming:runTestCase]{wyz.code.offensiveProgramming:runTestCase}} to reuse on-demand instrumented offensive programming function tests.
}
\examples{
# no tests instrumentation
}
\keyword{classes}
\keyword{environment}
\keyword{utilities}
\keyword{misc}
\concept{evaluation mode}
\concept{standard evaluation}
\concept{function return type evaluation}
\concept{parameter check evaluation}
